/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package methods;


/**
 *
 * @author michael.knudsen
 */
public class MethodForm extends javax.swing.JFrame {

    /**
     * Creates new form MethodForm
     */
    public MethodForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInput1 = new javax.swing.JTextField();
        txtInput2 = new javax.swing.JTextField();
        lblResult = new javax.swing.JLabel();
        btnFormat = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnIsInt = new javax.swing.JButton();
        btnParseInt = new javax.swing.JButton();
        btnFindInt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnIsFloat = new javax.swing.JButton();
        btnParseFloat = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        cboInstructions = new javax.swing.JComboBox();
        lblInstructionsDirections = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaInstructions1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaInstructions2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaInstructions3 = new javax.swing.JTextArea();
        lblMethodTop = new javax.swing.JLabel();
        lblMethodsBottom = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtInput1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input 1"));

        txtInput2.setBorder(javax.swing.BorderFactory.createTitledBorder("Input 2"));

        lblResult.setBorder(javax.swing.BorderFactory.createTitledBorder("Result"));

        btnFormat.setText("Format");
        btnFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormatActionPerformed(evt);
            }
        });

        btnExit.setText("Close");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnIsInt.setText("Is Integer?");
        btnIsInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIsIntActionPerformed(evt);
            }
        });

        btnParseInt.setText("Parse Int");
        btnParseInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParseIntActionPerformed(evt);
            }
        });

        btnFindInt.setText("Find Int");
        btnFindInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindIntActionPerformed(evt);
            }
        });

        jLabel1.setText("Michael Knudsen 2013");

        btnIsFloat.setText("Is Float?");
        btnIsFloat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIsFloatActionPerformed(evt);
            }
        });

        btnParseFloat.setText("Parse Float");
        btnParseFloat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParseFloatActionPerformed(evt);
            }
        });

        btnReset.setText("RESET FORM");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        cboInstructions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Instructions: Format", "Instructions: Is Integer? ", "Instructions: Is Float?", "Instructions: Parse Int", "Instructions: Parse Float", "Instructions: Find Int" }));
        cboInstructions.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                cboInstructionsComponentShown(evt);
            }
        });
        cboInstructions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboInstructionsItemStateChanged(evt);
            }
        });

        lblInstructionsDirections.setText("Click below to get instructions for each method (displayed in the three text areas). ");

        txtAreaInstructions1.setColumns(20);
        txtAreaInstructions1.setRows(5);
        jScrollPane1.setViewportView(txtAreaInstructions1);

        txtAreaInstructions2.setColumns(20);
        txtAreaInstructions2.setRows(5);
        jScrollPane2.setViewportView(txtAreaInstructions2);

        txtAreaInstructions3.setColumns(20);
        txtAreaInstructions3.setRows(5);
        jScrollPane3.setViewportView(txtAreaInstructions3);

        lblMethodTop.setText("vv METHODS BAR vv");

        lblMethodsBottom.setText("^^ METHODS BAR ^^");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblInstructionsDirections)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(116, 116, 116))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3)
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cboInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                        .addComponent(btnReset))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1))
                                .addGap(4, 4, 4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnFindInt, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnIsFloat, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnParseFloat)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnParseInt)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnIsInt)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnFormat)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMethodsBottom)
                                    .addComponent(lblMethodTop, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInstructionsDirections)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReset)
                    .addComponent(cboInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblMethodTop, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnFormat)
                        .addGap(18, 18, 18)
                        .addComponent(btnIsInt)
                        .addGap(18, 18, 18)
                        .addComponent(btnIsFloat)
                        .addGap(34, 34, 34)
                        .addComponent(btnParseInt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnParseFloat)
                        .addGap(27, 27, 27)
                        .addComponent(btnFindInt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMethodsBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnExit))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormatActionPerformed
        // TODO: test the formatNum() method; 
        
        float value = Float.parseFloat(txtInput1.getText()); 
        String format = txtInput2.getText(); 
        String result = ""; 
        
        result = MyUtils.formatNum(value, format); 
        lblResult.setText(result); 
        
        /** String fmt ="";
        float value = 0; 
        String fmtVal = ""; 
        
        //read the text boxes 
        
        fmt = txtInput2.getText(); 
        value = Float.parseFloat(txtInput1.getText()); 
        
        //call our user defined method
        fmtVal = MyUtils.formatNum(value, fmt); 
        
        //display the formatted result
        lblResult.setText(fmtVal); **/
    }//GEN-LAST:event_btnFormatActionPerformed

    private void btnIsIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIsIntActionPerformed
        // TODO add your handling code here:
        //to do: test the isInteger method 
        String value = txtInput1.getText(); 
        
        if (MyUtils.isInteger(value)) {
            lblResult.setText("YES"); 
        }
        else {
            lblResult.setText("NO"); 
        }
    }//GEN-LAST:event_btnIsIntActionPerformed

    private void btnParseIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParseIntActionPerformed
        // TODO add your handling code here:
        String value = txtInput1.getText();
        int num = MyUtils.tryParseInt(value, 0); 
        
        lblResult.setText(Integer.toString(num));     
    }//GEN-LAST:event_btnParseIntActionPerformed

    private void btnFindIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindIntActionPerformed
        // TODO add your handling code here:
        final int values[] = {2,9,7,5,6,8,3,4,1,10}; 
        int valueToFind; 
        valueToFind = MyUtils.tryParseInt(txtInput1.getText(), 0);
        int index = MyUtils.findItem(values, valueToFind); 
        //lblResult.setText(Integer.toString(index)); 
        
        if (index >= 0) {
            lblResult.setText("FOUND IT! Index = " + Integer.toString(index)); 
        }
        else{
            lblResult.setText("NOT FOUND!"); 
        }
    }//GEN-LAST:event_btnFindIntActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnIsFloatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIsFloatActionPerformed
        // TODO add your handling code here:
        String value = txtInput1.getText(); 
        
        if (MyUtils.isFloat(value)) {
            lblResult.setText("YES"); 
        }
        else {
            lblResult.setText("NO"); 
        }
    }//GEN-LAST:event_btnIsFloatActionPerformed

    private void btnParseFloatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParseFloatActionPerformed
        // TODO add your handling code here:
        String value = txtInput1.getText();
        float num = MyUtils.tryParseFloat(value, 0); 
        
        lblResult.setText(Float.toString(num));
    }//GEN-LAST:event_btnParseFloatActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtInput1.requestFocusInWindow();
        txtInput1.setText("");
        txtInput2.setText("");
        txtAreaInstructions1.setText(""); 
        txtAreaInstructions2.setText(""); 
        txtAreaInstructions3.setText("");
        lblResult.setText(""); 
    }//GEN-LAST:event_btnResetActionPerformed

    private void cboInstructionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboInstructionsItemStateChanged
        // TODO add your handling code here:
        int instructionMethodValue = cboInstructions.getSelectedIndex(); 
        
        if (instructionMethodValue == 0) {
           txtAreaInstructions1.setText("Input a number into the Input 1 box. Click Format button."); 
           txtAreaInstructions2.setText("Input a desired format into the Input 2 box (e.g. 0.00, $00.00)."); 
           txtAreaInstructions3.setText("Your number will be converted to the desired format.");  
        } else if (instructionMethodValue == 1){
            txtAreaInstructions1.setText("Input any value into the Input 1 box.");
            txtAreaInstructions2.setText("Click the Is Integer? button.");
            txtAreaInstructions3.setText("The display will tell you whether or not the input is an integer."); 
        } else if (instructionMethodValue == 2){
            txtAreaInstructions1.setText("Input any value into the Input 1 box.");
            txtAreaInstructions2.setText("Click the Is Float? button.");
            txtAreaInstructions3.setText("The display will tell you whether or not the input is a float.");
        } else if (instructionMethodValue == 3){
            txtAreaInstructions1.setText("Input any value into the Input 1 box.");
            txtAreaInstructions2.setText("Click the Parse Int button.");
            txtAreaInstructions3.setText("The display will convert the value to an Integer, if possible.");
        } else if (instructionMethodValue == 4){
            txtAreaInstructions1.setText("Input any value into the Input 1 box.");
            txtAreaInstructions2.setText("Click the Parse Int button.");
            txtAreaInstructions3.setText("The display will convert the value to a Float, if possible.");
        } else if (instructionMethodValue == 5){
            txtAreaInstructions1.setText("Input an integer value into the Input 1 box.");
            txtAreaInstructions2.setText("Click the Find Int button.");
            txtAreaInstructions3.setText("The display will tell you if your integer value was found in my array."); 
        }
    }//GEN-LAST:event_cboInstructionsItemStateChanged

    private void cboInstructionsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cboInstructionsComponentShown
        // TODO add your handling code here:
        txtInput1.requestFocusInWindow();
    }//GEN-LAST:event_cboInstructionsComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MethodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MethodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MethodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MethodForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MethodForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFindInt;
    private javax.swing.JButton btnFormat;
    private javax.swing.JButton btnIsFloat;
    private javax.swing.JButton btnIsInt;
    private javax.swing.JButton btnParseFloat;
    private javax.swing.JButton btnParseInt;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox cboInstructions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblInstructionsDirections;
    private javax.swing.JLabel lblMethodTop;
    private javax.swing.JLabel lblMethodsBottom;
    private javax.swing.JLabel lblResult;
    private javax.swing.JTextArea txtAreaInstructions1;
    private javax.swing.JTextArea txtAreaInstructions2;
    private javax.swing.JTextArea txtAreaInstructions3;
    private javax.swing.JTextField txtInput1;
    private javax.swing.JTextField txtInput2;
    // End of variables declaration//GEN-END:variables
}
